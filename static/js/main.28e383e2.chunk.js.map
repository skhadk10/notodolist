{"version":3,"sources":["logo.svg","component/AddForm.js","component/ToDoList.js","component/NotToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["initialFormData","title","hr","AddForm","handleOnAddTask","useState","task","setTask","handleOnChange","e","target","name","value","Form","onSubmit","preventDefault","Row","Col","Control","data-toggle","data-placement","placeholder","onChange","required","Button","variant","type","TaskLists","taskLists","handOnMarkAsNotToDo","handleonChange1","class","Table","striped","bordered","hover","size","map","row","i","defaultValue","onClick","NoToDoList","noToDoList","markAsToDo","handleonChange1NOtToDO","totaSavedTime","reduce","subTtl","item","style","backgroundColor","borderRadius","Alert","Heading","initialTaskLists","App","setTaskLists","setNoToDoList","itemTODelete","setItemTODelete","notoDeleteItem","setnotoDeleteItem","totalHrs","className","Container","frmDt","console","log","alert","index","splice","checked","newlist","filter","newArg","window","confirm","includes","deleteItemFromNOtTODOList","deleteItemfromTaskList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28e383e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from 'react'\r\nimport {Row,Col,Form,Button} from 'react-bootstrap'\r\n\r\nconst initialFormData ={\r\n    title:\"\",\r\n        hr:0,\r\n}\r\nexport const AddForm = ({handleOnAddTask}) => {\r\n    const [task, setTask] = useState(initialFormData)\r\n\r\n    const handleOnChange = e =>\r\n    {\r\n\r\nconst {name,value}=e.target;\r\nsetTask({...task,[name]:name==='hr'? +value:value,}\r\n)\r\n    }\r\n    const handleOnSubmit =e =>{\r\n        e.preventDefault();\r\n\r\n        handleOnAddTask(task);\r\n    }\r\n    return (\r\n       \r\n            \r\n            <Form  onSubmit={handleOnSubmit}>\r\n  <Row>\r\n    <Col>\r\n      <Form.Control data-toggle=\"tooltip\" data-placement=\"top\" title=\"AddTask Please\"  placeholder=\"Task Name\" onChange={handleOnChange}  value={task.title} name=\"title\" required/>\r\n    </Col>\r\n    <Col>\r\n      <Form.Control data-toggle=\"tooltip\" data-placement=\"top\" title=\"Add HOur Only\"   placeholder=\"Number of hours\" value={task.hr} required\r\n       onChange={handleOnChange}  name=\"hr\" />\r\n    </Col>\r\n    <Col>  <Button variant=\"primary\" type=\"submit\">\r\n    Add Task\r\n  </Button></Col>\r\n  </Row>\r\n</Form>\r\n       \r\n    )\r\n}","import React from 'react'\r\nimport {Card,Button,Table,InputGroup,FormControl} from 'react-bootstrap';\r\n\r\nexport const TaskLists = ({taskLists,handOnMarkAsNotToDo,handleonChange1}) => {\r\n    return (\r\n        <>\r\n        <h2>Task Lists <i class=\"fas fa-info-circle\"></i></h2>\r\n      <Table striped bordered hover size=\"lg\">\r\n  <thead>\r\n    <tr>\r\n      <th>check</th>\r\n      <th>Task</th>\r\n      <th>Hours</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {taskLists.map((row,i)=>\r\n    <tr key={i}>\r\n      <td> \r\n      <input  type=\"checkbox\" defaultValue={i} onChange={handleonChange1}  />{\"\"}\r\n    </td>\r\n      <td>{row?.title}</td>\r\n      <td>{row?.hr}</td>\r\n      <td><button  data-toggle=\"tooltip\" data-placement=\"top\" title=\"it move to Not TO DO List\" onClick={() => handOnMarkAsNotToDo(i)}>Mark as not to</button></td>\r\n    \r\n    </tr>)}\r\n  \r\n    \r\n  </tbody>\r\n</Table>\r\n</>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Card,Button,Table, InputGroup,Alert, Tooltip,OverlayTrigger} from 'react-bootstrap';\r\n\r\nexport const NoToDoList = ({noToDoList,markAsToDo,handleonChange1NOtToDO}) => {\r\n  // removing Data\r\n  // const [checkBox, setcheckBox] = useState([])\r\n  \r\n  // const handleOnCheckbox=e=>{\r\n  //     const{checked,value}=e.target\r\n  //     setcheckBox({...checkBox,[checked]:value})\r\n      \r\n  \r\n  \r\n//   const handleOnCheck=e=>{\r\n//   e.preventDefault();\r\n\r\n//   checkBoxRemove(checkBox);\r\n// }\r\n\r\n\r\n  const totaSavedTime= noToDoList.reduce((subTtl, item)=>\r\n     {return subTtl+= +item.hr},0);\r\n  \r\n    return (\r\n        <>\r\n             <h2>Not To Do list <i  style={{backgroundColor:\"yellow\",borderRadius: \"5px\"}}class=\"fas fa-info-circle\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"it move to TO DO List\"></i></h2>\r\n      <Table striped bordered hover size=\"lg\">\r\n  <thead>\r\n    <tr>\r\n   \r\n      <th>Task</th>\r\n      <th>Hours</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {noToDoList.map((row,i)=>\r\n    <tr key={i}>\r\n      <td><input type=\"checkbox\" defaultValue={i} onChange={handleonChange1NOtToDO}  />{\"\"}</td>\r\n      <label>{row?.title}</label>\r\n      <td>{row?.hr}</td>\r\n      <td>\r\n        <button data-toggle=\"tooltip\" data-placement=\"top\" title=\"it move to TO DO List\"  onClick={() => markAsToDo(i)}>\r\n     \r\n        Mark As TO DO\r\n     </button>   </td>\r\n    \r\n    </tr>)}\r\n  \r\n   \r\n  </tbody>\r\n</Table>\r\n<Alert variant=\"success\">\r\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\r\n  <p>\r\n    your saved= {totaSavedTime} hours\r\n  </p>\r\n  <hr />\r\n  \r\n</Alert>\r\n</>\r\n    )\r\n \r\n\r\n}","import logo from './logo.svg';\nimport React,{useState} from 'react'\n\nimport {Container,Row,Col, Button,Alert} from 'react-bootstrap';\nimport './App.css';\nimport { AddForm } from './component/AddForm';\nimport { TaskLists } from './component/ToDoList';\nimport { NoToDoList } from './component/NotToDoList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst initialTaskLists=[\n\n]\n\nconst App = () => {\n  const [taskLists, setTaskLists] = useState(initialTaskLists);\n  const [noToDoList, setNoToDoList] = useState([])\n  // const [totalHrs, setTotalHrs] = useState(0);\n  const [itemTODelete, setItemTODelete] = useState([])\n  const [notoDeleteItem, setnotoDeleteItem] = useState([])\n  // // total function\n  // const calculateTotalHours=() =>{\n  //   //tasklist\n  //   const totalFrmToDo=0; \n  //   // nottodolist\n  //   const totalFrmNotToDo=0;\n  //   const total=totalFrmNotToDo+totalFrmNotToDo\n  // }\n\n\n    // calculate total hours\n    const toDOTotalHrs= taskLists.reduce((subTtl,item)=>{return subTtl +item.hr },0)\n    const nottoDOTotalHrs= noToDoList.reduce((subTtl,item)=>{return subTtl +item.hr },0)\n    const totalHrs= toDOTotalHrs + nottoDOTotalHrs;\n\n  const handOnAddTask= (frmDt) =>{\n    console.log(\"Data type check>>\", typeof(frmDt.hr))\n    if(\n      totalHrs+ +frmDt.hr>168)\n    {\n      return alert(\"you have exceed the total allocated time for the week\")\n    }\n    // setTotalHrs(Number(frmDt.hr)+totalHrs);\n\n    setTaskLists([...taskLists,frmDt]);\n    console.log(setTaskLists)\n  }\n\n\n\n  const handOnMarkAsNotToDo= index =>{\n   \n    const item=taskLists.splice(index,1)\n    setNoToDoList([...noToDoList,item[0]]);\n    \n     }\n\n\n     const markAsToDo = index =>{\n       const item =noToDoList[index];\n       const newArg= noToDoList.filter((item,i)=>i!== index)\n       setNoToDoList(newArg);\n       setTaskLists([...taskLists,item]);\n\n     }\n\n    \n//  Adding and deleting value from list\n   const handleonChange1=e=>{\n     const{checked,value}=e.target;\n\n     if(checked){\n       return setItemTODelete([...itemTODelete, +value])\n     }\n\n\n    // remove from array \n    const newlist=itemTODelete.filter(item=> item !=value);\n    setItemTODelete(newlist)\n   }\n     \n\n\n  //  delete  item when delete button is clicked\n    const deleteItemfromTaskList=()=>\n    {\n      \n      const newArg=taskLists.filter((item,i)=>!itemTODelete.includes(i))\n      setNoToDoList(newArg)\n        \n  }\n\n\n  \n//  Adding and deleting value from list\n   const handleonChange1NOtToDO=e=>{\n     const{checked,value}=e.target;\n\n     if(checked) \n     {\n       return setItemTODelete([...notoDeleteItem, +value])\n     }\n\n    // remove from array \n    const newlist=notoDeleteItem.filter(item=> item !=value);\n    setnotoDeleteItem(newlist)\n   }\n     \n  //  delete Not TO DO item when delete button is clicked\n    const deleteItemFromNOtTODOList=()=>\n    {\n      const newArg=noToDoList.filter((item,i)=>!notoDeleteItem.includes(i))\n      setTaskLists(newArg)\n  }\n  \n\nconst deleteItem=()=>{\n  if(window.confirm(\"are you sure you want to delete the selected items?\"));\n      {\n\n  deleteItemFromNOtTODOList();\n  deleteItemfromTaskList()\n   \n }\n}\n  \n\nreturn (\n    <div className=\"main\">\n<Container variant=\"primary\" >\n  <Row>\n    <Col>\n    <div className=\"text-center pt-5\"><h1>Not To Do List</h1></div>\n    </Col>\n  </Row>\n  <hr></hr>\n\n<AddForm handleOnAddTask={handOnAddTask}\n/>\n<hr></hr>\n<Row>\n  <Col>\n  <TaskLists taskLists={taskLists}\n  handOnMarkAsNotToDo={handOnMarkAsNotToDo} handleonChange1={handleonChange1}\n  />\n  </Col>\n  <Col>\n  <NoToDoList  noToDoList={noToDoList} handleonChange1NOtToDO={handleonChange1NOtToDO}\n  markAsToDo={markAsToDo} />\n  </Col>\n</Row>\n\n<Row> <Alert variant=\"primary\">\n  <Alert.Heading>Hey, nice to see you</Alert.Heading>\n  <p>\n    your allocated  Time={totalHrs}/168 hours\n  </p>\n  <hr />\n  \n</Alert>\n  \n  </Row>\n{/* list items */}\n\n</Container>\n<Button  onClick={deleteItem} variant=\"primary\">Delete</Button>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}